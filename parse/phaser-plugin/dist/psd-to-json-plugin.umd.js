(function(u,f){typeof exports=="object"&&typeof module<"u"?module.exports=f():typeof define=="function"&&define.amd?define(f):(u=typeof globalThis<"u"?globalThis:u||self,u.PsdToJSONPlugin=f())})(this,function(){"use strict";var A=Object.defineProperty;var L=(u,f,p)=>f in u?A(u,f,{enumerable:!0,configurable:!0,writable:!0,value:p}):u[f]=p;var P=(u,f,p)=>(L(u,typeof f!="symbol"?f+"":f,p),p);const m=class m{constructor(t,e=null){this.parent=e,this.children=[],this.lazyLoad=!1,this.isLoaded=!1,Object.keys(t).forEach(s=>{s==="children"?this.children=t[s].map(n=>new m(n,this)):this[s]=t[s]}),this.bbox||(this.bbox={left:this.x,top:this.y,right:this.x+this.width,bottom:this.y+this.height})}isStandardProp(t){return m.standardProps.includes(t)}getCustomAttributes(){return Object.keys(this).filter(t=>!this.isStandardProp(t)&&t!=="parent").reduce((t,e)=>(t[e]=this[e],t),{})}createDebugBox(t,e,s,n={}){if(!this.shouldDebug(s,n))return null;let o,a=16711935;if(e==="zone"){const{left:i,top:r,right:l,bottom:d}=this.bbox,h=l-i,g=d-r;o=t.add.rectangle(i,r,h,g,a,.5),o.setOrigin(0,0)}else e==="sprite"||e==="image"?(o=t.add.rectangle(this.x,this.y,this.width,this.height,a,.5),o.setOrigin(0,0)):e==="point"&&(o=t.add.circle(this.x,this.y,5,a,.5));return o}getTargetObject(t,e){switch(e){case"sprite":return t.children.getByName(this.name);case"zone":return t.children.getByName(this.name);case"point":return t.children.getByName(this.name);default:return null}}shouldDebug(t,e){return t.options.debug||e.debug}getPath(){return this.parent?`${this.parent.getPath()}/${this.name}`:this.name}findByPath(t){const e=t.split("/");if(e[0]===this.name){if(e.length===1)return this;const s=e[1],n=this.children.find(o=>o.name===s);return n?n.findByPath(e.slice(1).join("/")):null}return null}static place(t,e,s,n,o,a={}){if(!e||!e[s])return console.warn(`${s} data not found.`),null;let i;if(s==="tiles")i=e[s].layers.find(l=>l.name===n);else{const l=n.split("/");i=e[s].find(d=>d.name===l[0]);for(let d=1;d<l.length;d++){if(!i||!i.children)return null;i=i.children.find(h=>h.name===l[d])}}if(!i)return console.warn(`${s} '${n}' not found in PSD data.`),null;const r=o(t,i,a);return r&&(e[`placed${s.charAt(0).toUpperCase()+s.slice(1)}`]||(e[`placed${s.charAt(0).toUpperCase()+s.slice(1)}`]={}),e[`placed${s.charAt(0).toUpperCase()+s.slice(1)}`][n]=r,r.children&&this.storeNestedObjects(e,s,n,r.children)),r}static storeNestedObjects(t,e,s,n){n.forEach(o=>{const a=`${s}/${o.layerData.name}`;t[`placed${e.charAt(0).toUpperCase()+e.slice(1)}`][a]=o,o.children&&this.storeNestedObjects(t,e,a,o.children)})}static placeAll(t,e,s,n,o={}){if(!e||!e[s])return console.warn(`${s} data not found.`),null;const a=e[s].map(i=>n(t,i,o));return e[`placed${s.charAt(0).toUpperCase()+s.slice(1)}`]=a,a}static get(t,e,s){const n=`placed${e.charAt(0).toUpperCase()+e.slice(1)}`;if(!t||!t[n])return console.warn(`Placed ${e} data not found.`),null;const o=s.split("/");let a=t[n].find(i=>i.layerData.name===o[0]);for(let i=1;i<o.length;i++){if(!a||!a.children)return null;a=a.children.find(r=>r.layerData.name===o[i])}return a}static countRecursive(t){return t.reduce((e,s)=>{let n=1;return s.children&&s.children.length>0&&(n+=this.countRecursive(s.children)),e+n},0)}};P(m,"standardProps",["name","x","y","width","height","children","lazyLoad"]);let u=m;function f(c){return new u(c)}function p(c){let t=0,e=!1,s=[];return{load(n,o,a){const i=`${a}/data.json`;n.load.json(o,i),n.load.once("complete",()=>{const r=n.cache.json.get(o);this.processJSON(n,o,r,a)})},processJSON(n,o,a,i){c.psdData[o]={...a,basePath:i,sprites:a.sprites.map(r=>f(r)),zones:a.zones.map(r=>f(r)),points:a.points.map(r=>f(r))},c.options.debug&&console.log(`Loaded JSON for key "${o}":`,c.psdData[o]),this.loadAssetsFromJSON(n,o,c.psdData[o])},loadAssetsFromJSON(n,o,a){const i=this.flattenObjects(a.sprites),r=a.tiles||{};let l=this.countAssets(i)+c.tiles.countTiles(r),d=0;c.options.debug&&console.log(`Total assets to load: ${l}`);const h=()=>{d++,t=d/l,n.events.emit("psdAssetsLoadProgress",t),c.options.debug&&(console.log(`Loaded asset ${d} of ${l}`),console.log(`Loading progress: ${(t*100).toFixed(2)}%`)),d===l&&(e=!0,n.events.emit("psdAssetsLoadComplete"),c.options.debug&&console.log("All PSD assets loaded"))};i.length>0&&this.loadSprites(n,i,a.basePath,h),r.layers&&r.layers.length>0&&c.tiles.load(n,r,a.basePath,h),l===0&&(e=!0,n.events.emit("psdAssetsLoadComplete")),n.load.isLoading()||n.load.start()},flattenObjects(n,o=""){return n.reduce((a,i)=>{const r=o?`${o}/${i.name}`:i.name;return i.lazyLoad?s.push({path:r,obj:i}):(!i.children||i.children.length===0)&&a.push({path:r,obj:i}),i.children&&a.push(...this.flattenObjects(i.children,r)),a},[])},loadSprites(n,o,a,i){o.forEach(({path:r,obj:l})=>{const d=`${a}/sprites/${r}.png`;n.load.image(r,d),n.load.once(`filecomplete-image-${r}`,()=>{l.isLoaded=!0,i()}),c.options.debug&&console.log(`Loading sprite: ${r} from ${d}`)})},countAssets(n){return n.length},getLazyLoadQueue(){return s},get progress(){return t},get complete(){return e}}}function w(c){return{place(t,e,s,n={}){const o=c.getData(s);return!o||!o.points?(console.warn(`Point data for key '${s}' not found.`),null):u.place(t,o,"points",e,this.placePoint.bind(this),n)},placePoint(t,e,s={}){const{name:n,x:o,y:a}=e,i=t.add.circle(o,a,5,16777215,1);i.setName(n);const r=e.createDebugBox(t,"point",c,s);c.options.debug&&console.log(`Placed point: ${n} at (${o}, ${a})`);const l={layerData:e,point:i,debugGraphics:r};return e.children&&(l.children=e.children.map(d=>this.placePoint(t,d,s))),l},placeAll(t,e,s={}){const n=c.getData(e);return!n||!n.points?(console.warn(`Point data for key '${e}' not found.`),null):n.points.map(o=>u.place(t,n,"points",o.name,this.placePoint.bind(this),s))},get(t,e){const s=c.getData(t);return!s||!s.placedPoints?(console.warn(`Placed point data for key '${t}' not found.`),null):s.placedPoints[e]||null},countPoints(t){return u.countRecursive(t)}}}function x(c){return{place(t,e,s,n={}){const o=c.getData(s);return!o||!o.sprites?(console.warn(`Sprite data for key '${s}' not found.`),null):u.place(t,o,"sprites",e,this.placeSprite.bind(this),n)},placeSprite(t,e,s={}){const{name:n,x:o,y:a,width:i,height:r}=e;let l=null;(!e.children||e.children.length===0)&&(e.lazyLoad&&!e.isLoaded?console.warn(`Sprite '${e.getPath()}' is set to lazy load and hasn't been loaded yet.`):(s.useImage?l=t.add.image(o,a,e.getPath()):l=t.add.sprite(o,a,e.getPath()),l.setName(n),i!==void 0&&r!==void 0&&l.setDisplaySize(i,r),l.setOrigin(0,0)));const d=e.createDebugBox(t,"sprite",c,s);d&&d.setPosition(o,a),c.options.debug&&console.log(`Placed ${s.useImage?"image":"sprite"}: ${n} at (${o}, ${a}) with dimensions ${i}x${r}`);const h={layerData:e,debugBox:d};if(l){h[s.useImage?"image":"sprite"]=l,l.on("changeposition",()=>{d&&d.setPosition(l.x,l.y)});const g=l.setPosition;l.setPosition=function(b,$){g.call(this,b,$),this.emit("changeposition")}}return e.children&&(h.children=e.children.map(g=>this.placeSprite(t,g,s))),h},placeAll(t,e,s={}){const n=c.getData(e);return!n||!n.sprites?(console.warn(`Sprite data for key '${e}' not found.`),null):n.sprites.map(o=>u.place(t,n,"sprites",o.name,this.placeSprite.bind(this),s))},get(t,e){const s=c.getData(t);return!s||!s.placedSprites?(console.warn(`Placed sprite data for key '${t}' not found.`),null):s.placedSprites[e]||null},countSprites(t){return u.countRecursive(t)}}}function D(c){return{load(t,e,s,n){if(!e||!e.layers||e.layers.length===0){console.warn("No tiles to load or invalid tiles data");return}e.layers.forEach(o=>{for(let a=0;a<e.columns;a++)for(let i=0;i<e.rows;i++){const r=`${o.name}_tile_${a}_${i}`,l=`${s}/tiles/${e.tile_slice_size}/${r}.jpg`;t.load.image(r,l),t.load.once(`filecomplete-image-${r}`,n),c.options.debug&&console.log(`Loading tile: ${r} from ${l}`)}})},countTiles(t){return!t||!t.layers?0:t.layers.length*t.columns*t.rows},place(t,e,s,n={}){const o=c.getData(s);return!o||!o.tiles?(console.warn(`Tiles data for key '${s}' not found.`),null):u.place(t,o,"tiles",e,this.placeTileLayer.bind(this),{...n,psdKey:s,tilesData:o.tiles})},placeTileLayer(t,e,s){const{tilesData:n}=s,o=t.add.container(0,0);o.setName(e.name);for(let i=0;i<n.columns;i++)for(let r=0;r<n.rows;r++){const l=`${e.name}_tile_${i}_${r}`,d=i*n.tile_slice_size,h=r*n.tile_slice_size;if(t.textures.exists(l)){const g=t.add.image(d,h,l).setOrigin(0,0);o.add(g),c.options.debug&&console.log(`Placed tile: ${l} at (${d}, ${h})`)}else console.warn(`Texture for tile ${l} not found`)}const a=this.addDebugVisualization(t,e,n,s);return a&&o.add(a),{layerData:e,tileLayer:o,debugGraphics:a}},placeAll(t,e,s={}){const n=c.getData(e);return!n||!n.tiles||!n.tiles.layers?(console.warn(`Tiles data for key '${e}' not found.`),null):n.tiles.layers.map(o=>this.place(t,o.name,e,s))},get(t,e){const s=c.getData(t);return!s||!s.placedTiles?(console.warn(`Placed tile layer data for key '${t}' not found.`),null):s.placedTiles[e]||null},addDebugVisualization(t,e,s,n){if(!n.debug&&!c.options.debug)return null;const o=t.add.graphics();o.lineStyle(2,16711935,1);const a=s.columns*s.tile_slice_size,i=s.rows*s.tile_slice_size;return o.strokeRect(0,0,a,i),o}}}function z(c){return{place(t,e,s,n={}){const o=c.getData(s);return!o||!o.zones?(console.warn(`Zone data for key '${s}' not found.`),null):u.place(t,o,"zones",e,this.placeZone.bind(this),n)},placeZone(t,e,s={}){const{name:n,bbox:o}=e,{left:a,top:i,right:r,bottom:l}=o,d=r-a,h=l-i,g=t.add.zone(a,i,d,h);g.setName(n),(!t.physics||!t.physics.world)&&t.physics.startSystem(Phaser.Physics.ARCADE),t.physics.add.existing(g,!0);const b=e.createDebugBox(t,"zone",c,s);c.options.debug&&console.log(`Placed zone: ${n} at (${a}, ${i}) with dimensions ${d}x${h}`);const $={layerData:e,zone:g,debugGraphics:b};return e.children&&($.children=e.children.map(y=>this.placeZone(t,y,s))),$},placeAll(t,e,s={}){const n=c.getData(e);return!n||!n.zones?(console.warn(`Zone data for key '${e}' not found.`),null):n.zones.map(o=>u.place(t,n,"zones",o.name,this.placeZone.bind(this),s))},get(t,e){const s=c.getData(t);return!s||!s.placedZones?(console.warn(`Placed zone data for key '${t}' not found.`),null):s.placedZones[e]||null},countZones(t){return u.countRecursive(t)}}}class S extends Phaser.Plugins.BasePlugin{constructor(t){super(t),this.psdData={},this.options={debug:!1}}boot(){this.pluginManager.game.events.once("destroy",this.destroy,this)}init(t={}){this.options={...this.options,...t},this.data=p(this),this.points=w(this),this.sprites=x(this),this.tiles=D(this),this.zones=z(this),this.options.debug&&console.log("PsdToJSONPlugin initialized with options:",this.options)}load(t,e,s){this.data.load(t,e,s)}getData(t){return this.psdData[t]}}return S});
